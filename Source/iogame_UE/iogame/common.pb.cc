// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#include "common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace pb {
namespace common {
PROTOBUF_CONSTEXPR SchoolLevelPb::SchoolLevelPb(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.viplevel_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SchoolLevelPbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchoolLevelPbDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchoolLevelPbDefaultTypeInternal() {}
  union {
    SchoolLevelPb _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchoolLevelPbDefaultTypeInternal _SchoolLevelPb_default_instance_;
PROTOBUF_CONSTEXPR OtherVerify::OtherVerify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.jwt_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OtherVerifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OtherVerifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OtherVerifyDefaultTypeInternal() {}
  union {
    OtherVerify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OtherVerifyDefaultTypeInternal _OtherVerify_default_instance_;
PROTOBUF_CONSTEXPR RoomNumPb::RoomNumPb(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.roomcount_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoomNumPbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoomNumPbDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoomNumPbDefaultTypeInternal() {}
  union {
    RoomNumPb _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoomNumPbDefaultTypeInternal _RoomNumPb_default_instance_;
PROTOBUF_CONSTEXPR UserInfo::UserInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/int64_t{0}
  , /*decltype(_impl_.time_)*/int64_t{0}
  , /*decltype(_impl_.time2_)*/int64_t{0}
  , /*decltype(_impl_.tempint_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserInfoDefaultTypeInternal() {}
  union {
    UserInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserInfoDefaultTypeInternal _UserInfo_default_instance_;
PROTOBUF_CONSTEXPR LoginVerify::LoginVerify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.jwt_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.age_)*/0
  , /*decltype(_impl_.loginbizcode_)*/0
  , /*decltype(_impl_.time_)*/int64_t{0}
  , /*decltype(_impl_.time2_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LoginVerifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginVerifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginVerifyDefaultTypeInternal() {}
  union {
    LoginVerify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginVerifyDefaultTypeInternal _LoginVerify_default_instance_;
PROTOBUF_CONSTEXPR ClassesPb::ClassesPb(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.studentnum_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ClassesPbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClassesPbDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClassesPbDefaultTypeInternal() {}
  union {
    ClassesPb _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClassesPbDefaultTypeInternal _ClassesPb_default_instance_;
PROTOBUF_CONSTEXPR SchoolPb::SchoolPb(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.classcapacity_)*/0
  , /*decltype(_impl_.teachernum_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SchoolPbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SchoolPbDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SchoolPbDefaultTypeInternal() {}
  union {
    SchoolPb _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SchoolPbDefaultTypeInternal _SchoolPb_default_instance_;
PROTOBUF_CONSTEXPR SpringBroadcastMessagePb::SpringBroadcastMessagePb(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SpringBroadcastMessagePbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpringBroadcastMessagePbDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpringBroadcastMessagePbDefaultTypeInternal() {}
  union {
    SpringBroadcastMessagePb _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpringBroadcastMessagePbDefaultTypeInternal _SpringBroadcastMessagePb_default_instance_;
PROTOBUF_CONSTEXPR LogicRequestPb::LogicRequestPb(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct LogicRequestPbDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogicRequestPbDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogicRequestPbDefaultTypeInternal() {}
  union {
    LogicRequestPb _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogicRequestPbDefaultTypeInternal _LogicRequestPb_default_instance_;
}  // namespace common
}  // namespace pb
static ::_pb::Metadata file_level_metadata_common_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_common_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_common_2eproto = nullptr;

const uint32_t TableStruct_common_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::common::SchoolLevelPb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::common::SchoolLevelPb, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::pb::common::SchoolLevelPb, _impl_.viplevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::common::OtherVerify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::common::OtherVerify, _impl_.jwt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::common::RoomNumPb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::common::RoomNumPb, _impl_.roomcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::common::UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::common::UserInfo, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::pb::common::UserInfo, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::pb::common::UserInfo, _impl_.tempint_),
  PROTOBUF_FIELD_OFFSET(::pb::common::UserInfo, _impl_.time_),
  PROTOBUF_FIELD_OFFSET(::pb::common::UserInfo, _impl_.time2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::common::LoginVerify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::common::LoginVerify, _impl_.age_),
  PROTOBUF_FIELD_OFFSET(::pb::common::LoginVerify, _impl_.jwt_),
  PROTOBUF_FIELD_OFFSET(::pb::common::LoginVerify, _impl_.loginbizcode_),
  PROTOBUF_FIELD_OFFSET(::pb::common::LoginVerify, _impl_.time_),
  PROTOBUF_FIELD_OFFSET(::pb::common::LoginVerify, _impl_.time2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::common::ClassesPb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::common::ClassesPb, _impl_.studentnum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::common::SchoolPb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::common::SchoolPb, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::pb::common::SchoolPb, _impl_.classcapacity_),
  PROTOBUF_FIELD_OFFSET(::pb::common::SchoolPb, _impl_.teachernum_),
  PROTOBUF_FIELD_OFFSET(::pb::common::SchoolPb, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::common::SpringBroadcastMessagePb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::common::SpringBroadcastMessagePb, _impl_.msg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::common::LogicRequestPb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pb::common::LogicRequestPb, _impl_.name_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::pb::common::SchoolLevelPb)},
  { 8, -1, -1, sizeof(::pb::common::OtherVerify)},
  { 15, -1, -1, sizeof(::pb::common::RoomNumPb)},
  { 22, -1, -1, sizeof(::pb::common::UserInfo)},
  { 33, -1, -1, sizeof(::pb::common::LoginVerify)},
  { 44, -1, -1, sizeof(::pb::common::ClassesPb)},
  { 51, -1, -1, sizeof(::pb::common::SchoolPb)},
  { 61, -1, -1, sizeof(::pb::common::SpringBroadcastMessagePb)},
  { 68, -1, -1, sizeof(::pb::common::LogicRequestPb)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::pb::common::_SchoolLevelPb_default_instance_._instance,
  &::pb::common::_OtherVerify_default_instance_._instance,
  &::pb::common::_RoomNumPb_default_instance_._instance,
  &::pb::common::_UserInfo_default_instance_._instance,
  &::pb::common::_LoginVerify_default_instance_._instance,
  &::pb::common::_ClassesPb_default_instance_._instance,
  &::pb::common::_SchoolPb_default_instance_._instance,
  &::pb::common::_SpringBroadcastMessagePb_default_instance_._instance,
  &::pb::common::_LogicRequestPb_default_instance_._instance,
};

const char descriptor_table_protodef_common_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014common.proto\022\tpb.common\"0\n\rSchoolLevel"
  "Pb\022\r\n\005level\030\001 \001(\005\022\020\n\010vipLevel\030\002 \001(\005\"\032\n\013O"
  "therVerify\022\013\n\003jwt\030\001 \001(\t\"\036\n\tRoomNumPb\022\021\n\t"
  "roomCount\030\001 \001(\005\"R\n\010UserInfo\022\n\n\002id\030\001 \001(\003\022"
  "\014\n\004name\030\002 \001(\t\022\017\n\007tempInt\030\003 \001(\005\022\014\n\004time\030\004"
  " \001(\003\022\r\n\005time2\030\005 \001(\003\"Z\n\013LoginVerify\022\013\n\003ag"
  "e\030\001 \001(\005\022\013\n\003jwt\030\002 \001(\t\022\024\n\014loginBizCode\030\003 \001"
  "(\005\022\014\n\004time\030\004 \001(\003\022\r\n\005time2\030\005 \001(\003\"\037\n\tClass"
  "esPb\022\022\n\nstudentNum\030\001 \001(\005\"R\n\010SchoolPb\022\r\n\005"
  "email\030\001 \001(\t\022\025\n\rclassCapacity\030\002 \001(\005\022\022\n\nte"
  "acherNum\030\003 \001(\005\022\014\n\004name\030\004 \001(\t\"\'\n\030SpringBr"
  "oadcastMessagePb\022\013\n\003msg\030\001 \001(\t\"\036\n\016LogicRe"
  "questPb\022\014\n\004name\030\001 \001(\tb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_common_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2eproto = {
    false, false, 509, descriptor_table_protodef_common_2eproto,
    "common.proto",
    &descriptor_table_common_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_common_2eproto::offsets,
    file_level_metadata_common_2eproto, file_level_enum_descriptors_common_2eproto,
    file_level_service_descriptors_common_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2eproto_getter() {
  return &descriptor_table_common_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2eproto(&descriptor_table_common_2eproto);
namespace pb {
namespace common {

// ===================================================================

class SchoolLevelPb::_Internal {
 public:
};

SchoolLevelPb::SchoolLevelPb(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.common.SchoolLevelPb)
}
SchoolLevelPb::SchoolLevelPb(const SchoolLevelPb& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SchoolLevelPb* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.level_){}
    , decltype(_impl_.viplevel_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.level_, &from._impl_.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.viplevel_) -
    reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.viplevel_));
  // @@protoc_insertion_point(copy_constructor:pb.common.SchoolLevelPb)
}

inline void SchoolLevelPb::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.level_){0}
    , decltype(_impl_.viplevel_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SchoolLevelPb::~SchoolLevelPb() {
  // @@protoc_insertion_point(destructor:pb.common.SchoolLevelPb)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SchoolLevelPb::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SchoolLevelPb::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SchoolLevelPb::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.common.SchoolLevelPb)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.viplevel_) -
      reinterpret_cast<char*>(&_impl_.level_)) + sizeof(_impl_.viplevel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SchoolLevelPb::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 vipLevel = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.viplevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SchoolLevelPb::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.common.SchoolLevelPb)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_level(), target);
  }

  // int32 vipLevel = 2;
  if (this->_internal_viplevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_viplevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.common.SchoolLevelPb)
  return target;
}

size_t SchoolLevelPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.common.SchoolLevelPb)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 vipLevel = 2;
  if (this->_internal_viplevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_viplevel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SchoolLevelPb::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SchoolLevelPb::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SchoolLevelPb::GetClassData() const { return &_class_data_; }


void SchoolLevelPb::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SchoolLevelPb*>(&to_msg);
  auto& from = static_cast<const SchoolLevelPb&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.common.SchoolLevelPb)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_viplevel() != 0) {
    _this->_internal_set_viplevel(from._internal_viplevel());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SchoolLevelPb::CopyFrom(const SchoolLevelPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.common.SchoolLevelPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchoolLevelPb::IsInitialized() const {
  return true;
}

void SchoolLevelPb::InternalSwap(SchoolLevelPb* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SchoolLevelPb, _impl_.viplevel_)
      + sizeof(SchoolLevelPb::_impl_.viplevel_)
      - PROTOBUF_FIELD_OFFSET(SchoolLevelPb, _impl_.level_)>(
          reinterpret_cast<char*>(&_impl_.level_),
          reinterpret_cast<char*>(&other->_impl_.level_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SchoolLevelPb::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[0]);
}

// ===================================================================

class OtherVerify::_Internal {
 public:
};

OtherVerify::OtherVerify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.common.OtherVerify)
}
OtherVerify::OtherVerify(const OtherVerify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OtherVerify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jwt_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.jwt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.jwt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_jwt().empty()) {
    _this->_impl_.jwt_.Set(from._internal_jwt(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pb.common.OtherVerify)
}

inline void OtherVerify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.jwt_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.jwt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.jwt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OtherVerify::~OtherVerify() {
  // @@protoc_insertion_point(destructor:pb.common.OtherVerify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OtherVerify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jwt_.Destroy();
}

void OtherVerify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OtherVerify::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.common.OtherVerify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.jwt_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OtherVerify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string jwt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_jwt();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pb.common.OtherVerify.jwt"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OtherVerify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.common.OtherVerify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string jwt = 1;
  if (!this->_internal_jwt().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jwt().data(), static_cast<int>(this->_internal_jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.common.OtherVerify.jwt");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_jwt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.common.OtherVerify)
  return target;
}

size_t OtherVerify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.common.OtherVerify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string jwt = 1;
  if (!this->_internal_jwt().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jwt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OtherVerify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OtherVerify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OtherVerify::GetClassData() const { return &_class_data_; }


void OtherVerify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OtherVerify*>(&to_msg);
  auto& from = static_cast<const OtherVerify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.common.OtherVerify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_jwt().empty()) {
    _this->_internal_set_jwt(from._internal_jwt());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OtherVerify::CopyFrom(const OtherVerify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.common.OtherVerify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OtherVerify::IsInitialized() const {
  return true;
}

void OtherVerify::InternalSwap(OtherVerify* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.jwt_, lhs_arena,
      &other->_impl_.jwt_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OtherVerify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[1]);
}

// ===================================================================

class RoomNumPb::_Internal {
 public:
};

RoomNumPb::RoomNumPb(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.common.RoomNumPb)
}
RoomNumPb::RoomNumPb(const RoomNumPb& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoomNumPb* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.roomcount_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.roomcount_ = from._impl_.roomcount_;
  // @@protoc_insertion_point(copy_constructor:pb.common.RoomNumPb)
}

inline void RoomNumPb::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.roomcount_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RoomNumPb::~RoomNumPb() {
  // @@protoc_insertion_point(destructor:pb.common.RoomNumPb)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoomNumPb::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoomNumPb::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoomNumPb::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.common.RoomNumPb)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roomcount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomNumPb::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 roomCount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.roomcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomNumPb::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.common.RoomNumPb)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roomCount = 1;
  if (this->_internal_roomcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_roomcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.common.RoomNumPb)
  return target;
}

size_t RoomNumPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.common.RoomNumPb)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 roomCount = 1;
  if (this->_internal_roomcount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_roomcount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomNumPb::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoomNumPb::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomNumPb::GetClassData() const { return &_class_data_; }


void RoomNumPb::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoomNumPb*>(&to_msg);
  auto& from = static_cast<const RoomNumPb&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.common.RoomNumPb)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roomcount() != 0) {
    _this->_internal_set_roomcount(from._internal_roomcount());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomNumPb::CopyFrom(const RoomNumPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.common.RoomNumPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomNumPb::IsInitialized() const {
  return true;
}

void RoomNumPb::InternalSwap(RoomNumPb* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.roomcount_, other->_impl_.roomcount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomNumPb::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[2]);
}

// ===================================================================

class UserInfo::_Internal {
 public:
};

UserInfo::UserInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.common.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.time_){}
    , decltype(_impl_.time2_){}
    , decltype(_impl_.tempint_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.id_, &from._impl_.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.tempint_) -
    reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.tempint_));
  // @@protoc_insertion_point(copy_constructor:pb.common.UserInfo)
}

inline void UserInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.id_){int64_t{0}}
    , decltype(_impl_.time_){int64_t{0}}
    , decltype(_impl_.time2_){int64_t{0}}
    , decltype(_impl_.tempint_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:pb.common.UserInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void UserInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.common.UserInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.tempint_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.tempint_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pb.common.UserInfo.name"));
        } else
          goto handle_unusual;
        continue;
      // int32 tempInt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.tempint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 time2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.time2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.common.UserInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.common.UserInfo.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // int32 tempInt = 3;
  if (this->_internal_tempint() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_tempint(), target);
  }

  // int64 time = 4;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_time(), target);
  }

  // int64 time2 = 5;
  if (this->_internal_time2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_time2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.common.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.common.UserInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // int64 time = 4;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time());
  }

  // int64 time2 = 5;
  if (this->_internal_time2() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time2());
  }

  // int32 tempInt = 3;
  if (this->_internal_tempint() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_tempint());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserInfo::GetClassData() const { return &_class_data_; }


void UserInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserInfo*>(&to_msg);
  auto& from = static_cast<const UserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.common.UserInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  if (from._internal_time() != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  if (from._internal_time2() != 0) {
    _this->_internal_set_time2(from._internal_time2());
  }
  if (from._internal_tempint() != 0) {
    _this->_internal_set_tempint(from._internal_tempint());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.common.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::InternalSwap(UserInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.tempint_)
      + sizeof(UserInfo::_impl_.tempint_)
      - PROTOBUF_FIELD_OFFSET(UserInfo, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[3]);
}

// ===================================================================

class LoginVerify::_Internal {
 public:
};

LoginVerify::LoginVerify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.common.LoginVerify)
}
LoginVerify::LoginVerify(const LoginVerify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LoginVerify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.jwt_){}
    , decltype(_impl_.age_){}
    , decltype(_impl_.loginbizcode_){}
    , decltype(_impl_.time_){}
    , decltype(_impl_.time2_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.jwt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.jwt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_jwt().empty()) {
    _this->_impl_.jwt_.Set(from._internal_jwt(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.age_, &from._impl_.age_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.time2_) -
    reinterpret_cast<char*>(&_impl_.age_)) + sizeof(_impl_.time2_));
  // @@protoc_insertion_point(copy_constructor:pb.common.LoginVerify)
}

inline void LoginVerify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.jwt_){}
    , decltype(_impl_.age_){0}
    , decltype(_impl_.loginbizcode_){0}
    , decltype(_impl_.time_){int64_t{0}}
    , decltype(_impl_.time2_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.jwt_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.jwt_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LoginVerify::~LoginVerify() {
  // @@protoc_insertion_point(destructor:pb.common.LoginVerify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LoginVerify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.jwt_.Destroy();
}

void LoginVerify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LoginVerify::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.common.LoginVerify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.jwt_.ClearToEmpty();
  ::memset(&_impl_.age_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.time2_) -
      reinterpret_cast<char*>(&_impl_.age_)) + sizeof(_impl_.time2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoginVerify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 age = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.age_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string jwt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_jwt();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pb.common.LoginVerify.jwt"));
        } else
          goto handle_unusual;
        continue;
      // int32 loginBizCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.loginbizcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 time2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.time2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoginVerify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.common.LoginVerify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 age = 1;
  if (this->_internal_age() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_age(), target);
  }

  // string jwt = 2;
  if (!this->_internal_jwt().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_jwt().data(), static_cast<int>(this->_internal_jwt().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.common.LoginVerify.jwt");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_jwt(), target);
  }

  // int32 loginBizCode = 3;
  if (this->_internal_loginbizcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_loginbizcode(), target);
  }

  // int64 time = 4;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_time(), target);
  }

  // int64 time2 = 5;
  if (this->_internal_time2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_time2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.common.LoginVerify)
  return target;
}

size_t LoginVerify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.common.LoginVerify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string jwt = 2;
  if (!this->_internal_jwt().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_jwt());
  }

  // int32 age = 1;
  if (this->_internal_age() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_age());
  }

  // int32 loginBizCode = 3;
  if (this->_internal_loginbizcode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_loginbizcode());
  }

  // int64 time = 4;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time());
  }

  // int64 time2 = 5;
  if (this->_internal_time2() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time2());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoginVerify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LoginVerify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoginVerify::GetClassData() const { return &_class_data_; }


void LoginVerify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LoginVerify*>(&to_msg);
  auto& from = static_cast<const LoginVerify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.common.LoginVerify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_jwt().empty()) {
    _this->_internal_set_jwt(from._internal_jwt());
  }
  if (from._internal_age() != 0) {
    _this->_internal_set_age(from._internal_age());
  }
  if (from._internal_loginbizcode() != 0) {
    _this->_internal_set_loginbizcode(from._internal_loginbizcode());
  }
  if (from._internal_time() != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  if (from._internal_time2() != 0) {
    _this->_internal_set_time2(from._internal_time2());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoginVerify::CopyFrom(const LoginVerify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.common.LoginVerify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginVerify::IsInitialized() const {
  return true;
}

void LoginVerify::InternalSwap(LoginVerify* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.jwt_, lhs_arena,
      &other->_impl_.jwt_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoginVerify, _impl_.time2_)
      + sizeof(LoginVerify::_impl_.time2_)
      - PROTOBUF_FIELD_OFFSET(LoginVerify, _impl_.age_)>(
          reinterpret_cast<char*>(&_impl_.age_),
          reinterpret_cast<char*>(&other->_impl_.age_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoginVerify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[4]);
}

// ===================================================================

class ClassesPb::_Internal {
 public:
};

ClassesPb::ClassesPb(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.common.ClassesPb)
}
ClassesPb::ClassesPb(const ClassesPb& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ClassesPb* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.studentnum_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.studentnum_ = from._impl_.studentnum_;
  // @@protoc_insertion_point(copy_constructor:pb.common.ClassesPb)
}

inline void ClassesPb::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.studentnum_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ClassesPb::~ClassesPb() {
  // @@protoc_insertion_point(destructor:pb.common.ClassesPb)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ClassesPb::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ClassesPb::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ClassesPb::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.common.ClassesPb)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.studentnum_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClassesPb::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 studentNum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.studentnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ClassesPb::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.common.ClassesPb)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 studentNum = 1;
  if (this->_internal_studentnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_studentnum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.common.ClassesPb)
  return target;
}

size_t ClassesPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.common.ClassesPb)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 studentNum = 1;
  if (this->_internal_studentnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_studentnum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ClassesPb::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ClassesPb::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ClassesPb::GetClassData() const { return &_class_data_; }


void ClassesPb::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ClassesPb*>(&to_msg);
  auto& from = static_cast<const ClassesPb&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.common.ClassesPb)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_studentnum() != 0) {
    _this->_internal_set_studentnum(from._internal_studentnum());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ClassesPb::CopyFrom(const ClassesPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.common.ClassesPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassesPb::IsInitialized() const {
  return true;
}

void ClassesPb::InternalSwap(ClassesPb* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.studentnum_, other->_impl_.studentnum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClassesPb::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[5]);
}

// ===================================================================

class SchoolPb::_Internal {
 public:
};

SchoolPb::SchoolPb(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.common.SchoolPb)
}
SchoolPb::SchoolPb(const SchoolPb& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SchoolPb* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.classcapacity_){}
    , decltype(_impl_.teachernum_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.classcapacity_, &from._impl_.classcapacity_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.teachernum_) -
    reinterpret_cast<char*>(&_impl_.classcapacity_)) + sizeof(_impl_.teachernum_));
  // @@protoc_insertion_point(copy_constructor:pb.common.SchoolPb)
}

inline void SchoolPb::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.classcapacity_){0}
    , decltype(_impl_.teachernum_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SchoolPb::~SchoolPb() {
  // @@protoc_insertion_point(destructor:pb.common.SchoolPb)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SchoolPb::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
  _impl_.name_.Destroy();
}

void SchoolPb::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SchoolPb::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.common.SchoolPb)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.classcapacity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.teachernum_) -
      reinterpret_cast<char*>(&_impl_.classcapacity_)) + sizeof(_impl_.teachernum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SchoolPb::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pb.common.SchoolPb.email"));
        } else
          goto handle_unusual;
        continue;
      // int32 classCapacity = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.classcapacity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 teacherNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.teachernum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pb.common.SchoolPb.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SchoolPb::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.common.SchoolPb)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.common.SchoolPb.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  // int32 classCapacity = 2;
  if (this->_internal_classcapacity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_classcapacity(), target);
  }

  // int32 teacherNum = 3;
  if (this->_internal_teachernum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_teachernum(), target);
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.common.SchoolPb.name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.common.SchoolPb)
  return target;
}

size_t SchoolPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.common.SchoolPb)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 classCapacity = 2;
  if (this->_internal_classcapacity() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_classcapacity());
  }

  // int32 teacherNum = 3;
  if (this->_internal_teachernum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_teachernum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SchoolPb::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SchoolPb::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SchoolPb::GetClassData() const { return &_class_data_; }


void SchoolPb::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SchoolPb*>(&to_msg);
  auto& from = static_cast<const SchoolPb&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.common.SchoolPb)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_classcapacity() != 0) {
    _this->_internal_set_classcapacity(from._internal_classcapacity());
  }
  if (from._internal_teachernum() != 0) {
    _this->_internal_set_teachernum(from._internal_teachernum());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SchoolPb::CopyFrom(const SchoolPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.common.SchoolPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchoolPb::IsInitialized() const {
  return true;
}

void SchoolPb::InternalSwap(SchoolPb* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SchoolPb, _impl_.teachernum_)
      + sizeof(SchoolPb::_impl_.teachernum_)
      - PROTOBUF_FIELD_OFFSET(SchoolPb, _impl_.classcapacity_)>(
          reinterpret_cast<char*>(&_impl_.classcapacity_),
          reinterpret_cast<char*>(&other->_impl_.classcapacity_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SchoolPb::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[6]);
}

// ===================================================================

class SpringBroadcastMessagePb::_Internal {
 public:
};

SpringBroadcastMessagePb::SpringBroadcastMessagePb(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.common.SpringBroadcastMessagePb)
}
SpringBroadcastMessagePb::SpringBroadcastMessagePb(const SpringBroadcastMessagePb& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SpringBroadcastMessagePb* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pb.common.SpringBroadcastMessagePb)
}

inline void SpringBroadcastMessagePb::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SpringBroadcastMessagePb::~SpringBroadcastMessagePb() {
  // @@protoc_insertion_point(destructor:pb.common.SpringBroadcastMessagePb)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SpringBroadcastMessagePb::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void SpringBroadcastMessagePb::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SpringBroadcastMessagePb::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.common.SpringBroadcastMessagePb)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SpringBroadcastMessagePb::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string msg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pb.common.SpringBroadcastMessagePb.msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SpringBroadcastMessagePb::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.common.SpringBroadcastMessagePb)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.common.SpringBroadcastMessagePb.msg");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.common.SpringBroadcastMessagePb)
  return target;
}

size_t SpringBroadcastMessagePb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.common.SpringBroadcastMessagePb)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 1;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SpringBroadcastMessagePb::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SpringBroadcastMessagePb::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SpringBroadcastMessagePb::GetClassData() const { return &_class_data_; }


void SpringBroadcastMessagePb::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SpringBroadcastMessagePb*>(&to_msg);
  auto& from = static_cast<const SpringBroadcastMessagePb&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.common.SpringBroadcastMessagePb)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SpringBroadcastMessagePb::CopyFrom(const SpringBroadcastMessagePb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.common.SpringBroadcastMessagePb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpringBroadcastMessagePb::IsInitialized() const {
  return true;
}

void SpringBroadcastMessagePb::InternalSwap(SpringBroadcastMessagePb* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SpringBroadcastMessagePb::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[7]);
}

// ===================================================================

class LogicRequestPb::_Internal {
 public:
};

LogicRequestPb::LogicRequestPb(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:pb.common.LogicRequestPb)
}
LogicRequestPb::LogicRequestPb(const LogicRequestPb& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  LogicRequestPb* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pb.common.LogicRequestPb)
}

inline void LogicRequestPb::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

LogicRequestPb::~LogicRequestPb() {
  // @@protoc_insertion_point(destructor:pb.common.LogicRequestPb)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void LogicRequestPb::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void LogicRequestPb::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void LogicRequestPb::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.common.LogicRequestPb)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LogicRequestPb::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "pb.common.LogicRequestPb.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LogicRequestPb::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.common.LogicRequestPb)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pb.common.LogicRequestPb.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.common.LogicRequestPb)
  return target;
}

size_t LogicRequestPb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.common.LogicRequestPb)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LogicRequestPb::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    LogicRequestPb::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LogicRequestPb::GetClassData() const { return &_class_data_; }


void LogicRequestPb::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<LogicRequestPb*>(&to_msg);
  auto& from = static_cast<const LogicRequestPb&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb.common.LogicRequestPb)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LogicRequestPb::CopyFrom(const LogicRequestPb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.common.LogicRequestPb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogicRequestPb::IsInitialized() const {
  return true;
}

void LogicRequestPb::InternalSwap(LogicRequestPb* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata LogicRequestPb::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2eproto_getter, &descriptor_table_common_2eproto_once,
      file_level_metadata_common_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::common::SchoolLevelPb*
Arena::CreateMaybeMessage< ::pb::common::SchoolLevelPb >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::common::SchoolLevelPb >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::common::OtherVerify*
Arena::CreateMaybeMessage< ::pb::common::OtherVerify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::common::OtherVerify >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::common::RoomNumPb*
Arena::CreateMaybeMessage< ::pb::common::RoomNumPb >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::common::RoomNumPb >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::common::UserInfo*
Arena::CreateMaybeMessage< ::pb::common::UserInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::common::UserInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::common::LoginVerify*
Arena::CreateMaybeMessage< ::pb::common::LoginVerify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::common::LoginVerify >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::common::ClassesPb*
Arena::CreateMaybeMessage< ::pb::common::ClassesPb >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::common::ClassesPb >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::common::SchoolPb*
Arena::CreateMaybeMessage< ::pb::common::SchoolPb >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::common::SchoolPb >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::common::SpringBroadcastMessagePb*
Arena::CreateMaybeMessage< ::pb::common::SpringBroadcastMessagePb >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::common::SpringBroadcastMessagePb >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::common::LogicRequestPb*
Arena::CreateMaybeMessage< ::pb::common::LogicRequestPb >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pb::common::LogicRequestPb >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
